// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`convert deeplyCopy should convert array of nodes 1`] = `
Object {
  "amdDependencies": Array [],
  "bindDiagnostics": Array [],
  "bindSuggestionDiagnostics": undefined,
  "checkJsDirective": undefined,
  "commentDirectives": undefined,
  "endOfFileToken": Object {
    "loc": Object {
      "end": Object {
        "column": 12,
        "line": 1,
      },
      "start": Object {
        "column": 12,
        "line": 1,
      },
    },
    "range": Array [
      12,
      12,
    ],
    "transformFlags": 0,
    "type": "TSEndOfFileToken",
  },
  "externalModuleIndicator": undefined,
  "fileName": "text.ts",
  "hasNoDefaultLib": false,
  "identifierCount": 2,
  "identifiers": Map {
    "foo" => "foo",
    "T" => "T",
  },
  "isDeclarationFile": false,
  "languageVariant": 1,
  "languageVersion": 99,
  "libReferenceDirectives": Array [],
  "lineMap": Array [
    null,
  ],
  "loc": Object {
    "end": Object {
      "column": 12,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "nodeCount": 7,
  "parseDiagnostics": Array [],
  "pragmas": Map {},
  "range": Array [
    0,
    12,
  ],
  "referencedFiles": Array [],
  "scriptKind": 4,
  "statements": Array [
    Object {
      "expression": Object {
        "arguments": Array [],
        "callee": Object {
          "loc": Object {
            "end": Object {
              "column": 7,
              "line": 1,
            },
            "start": Object {
              "column": 4,
              "line": 1,
            },
          },
          "name": "foo",
          "range": Array [
            4,
            7,
          ],
          "type": "Identifier",
        },
        "loc": Object {
          "end": Object {
            "column": 12,
            "line": 1,
          },
          "start": Object {
            "column": 0,
            "line": 1,
          },
        },
        "range": Array [
          0,
          12,
        ],
        "type": "NewExpression",
        "typeParameters": Object {
          "loc": Object {
            "end": Object {
              "column": 10,
              "line": 1,
            },
            "start": Object {
              "column": 7,
              "line": 1,
            },
          },
          "params": Array [
            Object {
              "loc": Object {
                "end": Object {
                  "column": 9,
                  "line": 1,
                },
                "start": Object {
                  "column": 8,
                  "line": 1,
                },
              },
              "range": Array [
                8,
                9,
              ],
              "type": "TSTypeReference",
              "typeName": Object {
                "loc": Object {
                  "end": Object {
                    "column": 9,
                    "line": 1,
                  },
                  "start": Object {
                    "column": 8,
                    "line": 1,
                  },
                },
                "name": "T",
                "range": Array [
                  8,
                  9,
                ],
                "type": "Identifier",
              },
              "typeParameters": undefined,
            },
          ],
          "range": Array [
            7,
            10,
          ],
          "type": "TSTypeParameterInstantiation",
        },
      },
      "loc": Object {
        "end": Object {
          "column": 12,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        12,
      ],
      "type": "ExpressionStatement",
    },
  ],
  "text": "new foo<T>()",
  "transformFlags": 9,
  "type": "TSSourceFile",
  "typeReferenceDirectives": Array [],
}
`;

exports[`convert deeplyCopy should convert node correctly 1`] = `
Object {
  "body": Array [
    Object {
      "loc": Object {
        "end": Object {
          "column": 35,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "localSymbol": undefined,
      "locals": undefined,
      "modifiers": undefined,
      "name": Object {
        "escapedText": "foo",
        "loc": Object {
          "end": Object {
            "column": 8,
            "line": 1,
          },
          "start": Object {
            "column": 5,
            "line": 1,
          },
        },
        "originalKeywordKind": undefined,
        "range": Array [
          5,
          8,
        ],
        "transformFlags": 0,
        "type": "TSUnparsedPrologue",
      },
      "nextContainer": undefined,
      "range": Array [
        0,
        35,
      ],
      "symbol": undefined,
      "transformFlags": 1,
      "type": "TSUnparsedPrologue",
      "typeAnnotation": null,
      "typeParameters": null,
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 35,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    35,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert deeplyCopy should convert node with decorators correctly 1`] = `
Object {
  "decorators": Array [
    Object {
      "expression": Object {
        "loc": Object {
          "end": Object {
            "column": 5,
            "line": 1,
          },
          "start": Object {
            "column": 1,
            "line": 1,
          },
        },
        "name": "test",
        "range": Array [
          1,
          5,
        ],
        "type": "Identifier",
      },
      "loc": Object {
        "end": Object {
          "column": 5,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        5,
      ],
      "type": "Decorator",
    },
  ],
  "heritageClauses": undefined,
  "loc": Object {
    "end": Object {
      "column": 18,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "localSymbol": undefined,
  "locals": undefined,
  "members": Array [],
  "modifiers": undefined,
  "name": Object {
    "loc": Object {
      "end": Object {
        "column": 15,
        "line": 1,
      },
      "start": Object {
        "column": 12,
        "line": 1,
      },
    },
    "name": "foo",
    "range": Array [
      12,
      15,
    ],
    "type": "Identifier",
  },
  "nextContainer": undefined,
  "range": Array [
    0,
    18,
  ],
  "symbol": undefined,
  "transformFlags": 2305,
  "type": "TSClassDeclaration",
  "typeParameters": null,
}
`;

exports[`convert deeplyCopy should convert node with type arguments correctly 1`] = `
Object {
  "arguments": Array [],
  "expression": Object {
    "loc": Object {
      "end": Object {
        "column": 7,
        "line": 1,
      },
      "start": Object {
        "column": 4,
        "line": 1,
      },
    },
    "name": "foo",
    "range": Array [
      4,
      7,
    ],
    "type": "Identifier",
  },
  "loc": Object {
    "end": Object {
      "column": 12,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    12,
  ],
  "transformFlags": 9,
  "type": "TSNewExpression",
  "typeParameters": Object {
    "loc": Object {
      "end": Object {
        "column": 10,
        "line": 1,
      },
      "start": Object {
        "column": 7,
        "line": 1,
      },
    },
    "params": Array [
      Object {
        "loc": Object {
          "end": Object {
            "column": 9,
            "line": 1,
          },
          "start": Object {
            "column": 8,
            "line": 1,
          },
        },
        "range": Array [
          8,
          9,
        ],
        "type": "TSTypeReference",
        "typeName": Object {
          "loc": Object {
            "end": Object {
              "column": 9,
              "line": 1,
            },
            "start": Object {
              "column": 8,
              "line": 1,
            },
          },
          "name": "T",
          "range": Array [
            8,
            9,
          ],
          "type": "Identifier",
        },
        "typeParameters": undefined,
      },
    ],
    "range": Array [
      7,
      10,
    ],
    "type": "TSTypeParameterInstantiation",
  },
}
`;

exports[`convert deeplyCopy should convert node with type parameters correctly 1`] = `
Object {
  "heritageClauses": undefined,
  "loc": Object {
    "end": Object {
      "column": 15,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "localSymbol": undefined,
  "locals": undefined,
  "members": Array [],
  "modifiers": undefined,
  "name": Object {
    "loc": Object {
      "end": Object {
        "column": 9,
        "line": 1,
      },
      "start": Object {
        "column": 6,
        "line": 1,
      },
    },
    "name": "foo",
    "range": Array [
      6,
      9,
    ],
    "type": "Identifier",
  },
  "nextContainer": undefined,
  "range": Array [
    0,
    15,
  ],
  "symbol": undefined,
  "transformFlags": 257,
  "type": "TSClassDeclaration",
  "typeParameters": Object {
    "loc": Object {
      "end": Object {
        "column": 12,
        "line": 1,
      },
      "start": Object {
        "column": 9,
        "line": 1,
      },
    },
    "params": Array [
      Object {
        "constraint": undefined,
        "default": undefined,
        "loc": Object {
          "end": Object {
            "column": 11,
            "line": 1,
          },
          "start": Object {
            "column": 10,
            "line": 1,
          },
        },
        "name": Object {
          "loc": Object {
            "end": Object {
              "column": 11,
              "line": 1,
            },
            "start": Object {
              "column": 10,
              "line": 1,
            },
          },
          "name": "T",
          "range": Array [
            10,
            11,
          ],
          "type": "Identifier",
        },
        "range": Array [
          10,
          11,
        ],
        "type": "TSTypeParameter",
      },
    ],
    "range": Array [
      9,
      12,
    ],
    "type": "TSTypeParameterDeclaration",
  },
}
`;

exports[`convert preserveParens should generate ParenthesizedExpression const x = /* test */ ( /** @type string */ ( a )) 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "expression": Object {
              "loc": Object {
                "end": Object {
                  "column": 46,
                  "line": 1,
                },
                "start": Object {
                  "column": 45,
                  "line": 1,
                },
              },
              "name": "a",
              "range": Array [
                45,
                46,
              ],
              "type": "Identifier",
            },
            "loc": Object {
              "end": Object {
                "column": 48,
                "line": 1,
              },
              "start": Object {
                "column": 43,
                "line": 1,
              },
            },
            "range": Array [
              43,
              48,
            ],
            "type": "ParenthesizedExpression",
          },
          "loc": Object {
            "end": Object {
              "column": 49,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            49,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 49,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        49,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 49,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    49,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should generate ParenthesizedExpression const x = /** @type string */ (x); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "expression": Object {
              "loc": Object {
                "end": Object {
                  "column": 32,
                  "line": 1,
                },
                "start": Object {
                  "column": 31,
                  "line": 1,
                },
              },
              "name": "x",
              "range": Array [
                31,
                32,
              ],
              "type": "Identifier",
            },
            "loc": Object {
              "end": Object {
                "column": 33,
                "line": 1,
              },
              "start": Object {
                "column": 30,
                "line": 1,
              },
            },
            "range": Array [
              30,
              33,
            ],
            "type": "ParenthesizedExpression",
          },
          "loc": Object {
            "end": Object {
              "column": 33,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            33,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 34,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        34,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 34,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    34,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should generate ParenthesizedExpression const x = /** @type string */(2); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "expression": Object {
              "loc": Object {
                "end": Object {
                  "column": 31,
                  "line": 1,
                },
                "start": Object {
                  "column": 30,
                  "line": 1,
                },
              },
              "range": Array [
                30,
                31,
              ],
              "raw": "2",
              "type": "Literal",
              "value": 2,
            },
            "loc": Object {
              "end": Object {
                "column": 32,
                "line": 1,
              },
              "start": Object {
                "column": 29,
                "line": 1,
              },
            },
            "range": Array [
              29,
              32,
            ],
            "type": "ParenthesizedExpression",
          },
          "loc": Object {
            "end": Object {
              "column": 32,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            32,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 33,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        33,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 33,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    33,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = (
          /* abc */
          2
        ); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 11,
                "line": 3,
              },
              "start": Object {
                "column": 10,
                "line": 3,
              },
            },
            "range": Array [
              42,
              43,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 9,
              "line": 4,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            53,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 10,
          "line": 4,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        54,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 10,
      "line": 4,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    54,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = (
          // test
          2
        ); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 11,
                "line": 3,
              },
              "start": Object {
                "column": 10,
                "line": 3,
              },
            },
            "range": Array [
              40,
              41,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 9,
              "line": 4,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            51,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 10,
          "line": 4,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        52,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 10,
      "line": 4,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    52,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = (
          2
        ); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 11,
                "line": 2,
              },
              "start": Object {
                "column": 10,
                "line": 2,
              },
            },
            "range": Array [
              22,
              23,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 9,
              "line": 3,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            33,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 10,
          "line": 3,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        34,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 10,
      "line": 3,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    34,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = ( /* abc */ 2); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 23,
                "line": 1,
              },
              "start": Object {
                "column": 22,
                "line": 1,
              },
            },
            "range": Array [
              22,
              23,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 24,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            24,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 25,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        25,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 25,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    25,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = ( /* abc */2 ); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 22,
                "line": 1,
              },
              "start": Object {
                "column": 21,
                "line": 1,
              },
            },
            "range": Array [
              21,
              22,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 24,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            24,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 25,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        25,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 25,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    25,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = ( 2 ); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 13,
                "line": 1,
              },
              "start": Object {
                "column": 12,
                "line": 1,
              },
            },
            "range": Array [
              12,
              13,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 15,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            15,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 16,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        16,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 16,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    16,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = ( 2/* abc */ ); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 13,
                "line": 1,
              },
              "start": Object {
                "column": 12,
                "line": 1,
              },
            },
            "range": Array [
              12,
              13,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 24,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            24,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 25,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        25,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 25,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    25,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = (/* abc */ 2); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 22,
                "line": 1,
              },
              "start": Object {
                "column": 21,
                "line": 1,
              },
            },
            "range": Array [
              21,
              22,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 23,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            23,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 24,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        24,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 24,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    24,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = (2 /* abc */ ); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 12,
                "line": 1,
              },
              "start": Object {
                "column": 11,
                "line": 1,
              },
            },
            "range": Array [
              11,
              12,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 24,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            24,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 25,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        25,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 25,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    25,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = (2 /* abc */); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 12,
                "line": 1,
              },
              "start": Object {
                "column": 11,
                "line": 1,
              },
            },
            "range": Array [
              11,
              12,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 23,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            23,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 24,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        24,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 24,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    24,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = (2) /* test */; 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 12,
                "line": 1,
              },
              "start": Object {
                "column": 11,
                "line": 1,
              },
            },
            "range": Array [
              11,
              12,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 13,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            13,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 25,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        25,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 25,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    25,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = (2)/* test */; 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 12,
                "line": 1,
              },
              "start": Object {
                "column": 11,
                "line": 1,
              },
            },
            "range": Array [
              11,
              12,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 13,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            13,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 24,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        24,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 24,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    24,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = (2); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 12,
                "line": 1,
              },
              "start": Object {
                "column": 11,
                "line": 1,
              },
            },
            "range": Array [
              11,
              12,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 13,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            13,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 14,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        14,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 14,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    14,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = (x); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 12,
                "line": 1,
              },
              "start": Object {
                "column": 11,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              11,
              12,
            ],
            "type": "Identifier",
          },
          "loc": Object {
            "end": Object {
              "column": 13,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            13,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 14,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        14,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 14,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    14,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = /* test */ ( /* test */ ( /* test */ a )) 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 48,
                "line": 1,
              },
              "start": Object {
                "column": 47,
                "line": 1,
              },
            },
            "name": "a",
            "range": Array [
              47,
              48,
            ],
            "type": "Identifier",
          },
          "loc": Object {
            "end": Object {
              "column": 51,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            51,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 51,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        51,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 51,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    51,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = /* test */ (2); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 23,
                "line": 1,
              },
              "start": Object {
                "column": 22,
                "line": 1,
              },
            },
            "range": Array [
              22,
              23,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 24,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            24,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 25,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        25,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 25,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    25,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;

exports[`convert preserveParens should not generate ParenthesizedExpression const x = /* test */(2); 1`] = `
Object {
  "body": Array [
    Object {
      "declarations": Array [
        Object {
          "id": Object {
            "loc": Object {
              "end": Object {
                "column": 7,
                "line": 1,
              },
              "start": Object {
                "column": 6,
                "line": 1,
              },
            },
            "name": "x",
            "range": Array [
              6,
              7,
            ],
            "type": "Identifier",
          },
          "init": Object {
            "loc": Object {
              "end": Object {
                "column": 22,
                "line": 1,
              },
              "start": Object {
                "column": 21,
                "line": 1,
              },
            },
            "range": Array [
              21,
              22,
            ],
            "raw": "2",
            "type": "Literal",
            "value": 2,
          },
          "loc": Object {
            "end": Object {
              "column": 23,
              "line": 1,
            },
            "start": Object {
              "column": 6,
              "line": 1,
            },
          },
          "range": Array [
            6,
            23,
          ],
          "type": "VariableDeclarator",
        },
      ],
      "kind": "const",
      "loc": Object {
        "end": Object {
          "column": 24,
          "line": 1,
        },
        "start": Object {
          "column": 0,
          "line": 1,
        },
      },
      "range": Array [
        0,
        24,
      ],
      "type": "VariableDeclaration",
    },
  ],
  "loc": Object {
    "end": Object {
      "column": 24,
      "line": 1,
    },
    "start": Object {
      "column": 0,
      "line": 1,
    },
  },
  "range": Array [
    0,
    24,
  ],
  "sourceType": "script",
  "type": "Program",
}
`;
